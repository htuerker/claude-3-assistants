{
  "nodes": [
    {
      "id": "fb36467d-adbf-48e6-895b-5b376fffddbb",
      "type": "script",
      "label": "Claude Assistant",
      "nodes": [
        {
          "integrations": ["gsheets"],
          "meta": {
            "icon": {
              "type": "URL",
              "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FGoogleSheets.png?alt=media&token=89b3cfec-6746-43da-a404-5d20adb60472"
            },
            "description": "Fetch a Google Spreadsheet using the Google Sheets API",
            "id": "oauth-gsheets-get-sheet",
            "name": "Get Sheets"
          },
          "output": {
            "title": "Spreadsheet Data",
            "description": "The data of the fetched Google Spreadsheet",
            "buildship": {},
            "type": "object"
          },
          "inputs": {
            "properties": {
              "ranges": {
                "pattern": "",
                "title": "Ranges",
                "type": "string",
                "description": "The ranges to retrieve from the spreadsheet.\n\n**SAMPLE INPUT:**\n```\n[\"Sheet1\"]\n```",
                "buildship": { "sensitive": false, "index": 1 },
                "default": []
              },
              "spreadsheetUrl": {
                "title": "Sheet URL",
                "description": "The URL of the Google Spreadsheet to fetch. [Refer API Documentation](https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/create).\n\nTIP ðŸ’¡: Available in the following format in your Google Sheets: `https://docs.google.com/spreadsheets/d/spreadsheet-id/edit`",
                "type": "string",
                "pattern": "",
                "buildship": { "sensitive": false, "index": 0 },
                "default": ""
              }
            },
            "required": ["apiKey", "includeGridData", "spreadsheetUrl", "ranges"],
            "type": "object"
          },
          "_libRef": {
            "integrity": "v3:f8f3b15ffb6cca5de72ce53e98a588b5",
            "isDirty": true,
            "version": "1.0.3",
            "libType": "public",
            "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gsheets-get-sheet/1.0.3/build.cjs",
            "libNodeRefId": "@buildship/oauth-gsheets-get-sheet"
          },
          "label": "Get Sheets",
          "type": "script",
          "script": "import fetch from 'node-fetch';\n\nexport default async function fetchGoogleSpreadsheet({\n    spreadsheetUrl,\n    ranges\n}, {\n    auth,\n    logging\n}) {\n    const { access_token } = await auth.getToken();\n\n    // Extracting spreadsheetId from the URL\n    const regex = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/;\n    const match = spreadsheetUrl.match(regex);\n    if (!match) {\n        throw new Error('Invalid spreadsheet URL');\n    }\n    const spreadsheetId = match[1];\n\n  \n    const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${ranges}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${access_token}`\n        }\n    });\n    const data = await response.json();\n    return data;\n}\n",
          "onFail": null,
          "id": "aa5d0298-57c2-4fb5-ad5b-caa2071f8d31",
          "dependencies": { "node-fetch": "2.7.0" },
          "name": "Get Sheets"
        }
      ],
      "integrations": [],
      "onFail": null,
      "name": "Claude Assistant",
      "script": "import axios from \"axios\";\n\nconst nodeToClaudeTool = (node) => {\n  return {\n    // Use node.id as the name of the tool. Spaces are not allowed.\n    name: node.id,\n    description: node.meta.description ?? \"\",\n    input_schema: {\n      type: \"object\",\n      properties: Object.entries(node.inputs.properties)\n        .reduce((properties, [name, value]) => {\n          if (value.buildship && !value.buildship.toBeAutoFilled) return properties;\n          return {\n            ...properties, [name]: {\n              type: value.type,\n              enum: value.enum,\n              description: value.description\n            }\n          }\n        }, {}),\n      required: Object.entries(node.inputs.properties).map(([name, value]) => {\n          if (value.buildship && value.buildship.toBeAutoFilled && node.inputs.required.includes(name)) return name;\n          return false;\n        }).filter(Boolean)\n    },\n  };\n}\n\nexport default async function assistant(\n  { claudeApiKey, model, maxTokens, userPrompt, instructions, chatHistory },\n  { logging, execute, nodes }\n) {\n  // TODO\n  const version = \"2023-06-01\";\n  const beta = \"tools-2024-04-04\";\n\n  const client = axios.create({\n    baseURL: \"https://api.anthropic.com/v1\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'x-api-key': claudeApiKey,\n      'anthropic-version': version,\n      'anthropic-beta': beta\n    }\n  });\n\n  const tools = nodes?.map(nodeToClaudeTool) ?? [];\n\n  const initialMessages = [\n    ...(chatHistory ?? []),\n    {\n      \"role\": \"user\",\n      \"content\": userPrompt,\n    }];\n\n  const baseRequest = {\n    \"model\": model,\n    \"max_tokens\": maxTokens,\n    \"system\": instructions || \"\",\n    \"tools\": tools,\n    \"messages\": initialMessages\n  };\n\n  try {\n    let request = { ...baseRequest };\n    let requestCount = 1;\n    logging.log(`Claude request(${requestCount}):`, baseRequest);\n    let response = await client.post(\"/messages\", request);\n    logging.log(`Claude response(${requestCount}): `, response.data);\n\n    do {\n      if (response.status !== 200) {\n        throw response.error;\n      }\n      if (response.data.type === \"error\") {\n          throw response.data.error;\n      }\n\n      let result = response.data;\n\n      const isEndTurn = result.stop_reason === \"end_turn\";\n      if(isEndTurn) break;\n      \n      const content = result.content;\n      request.messages.push({ role: \"assistant\", content });\n      \n      const isToolUse = result.stop_reason === \"tool_use\" && content instanceof Array;\n      if (isToolUse) {\n        const toolUseMessage = {\n          role: \"user\",\n          content: []\n        };\n        const toolUses = content.filter(content => content.type === \"tool_use\");\n        for (const toolUse of toolUses) {\n          const tool = tools.find(tool => tool.name === toolUse.name);\n          const node = nodes?.find(node => node.id === toolUse.name);\n          if (!tool || !node) {\n            logging.log(\"Failed to find tool:\");\n            logging.log(toolUse);\n            logging.log(node);\n            throw new Error(\"Failed to find tool\");\n          }\n          logging.log(\"Tool node: \", node.name);\n          const toolResponse = await execute(node.label, toolUse.input);\n          logging.log(\"Tool response: \", toolResponse);\n          toolUseMessage.content.push({\n            type: \"tool_result\",\n            tool_use_id: toolUse.id,\n            content: toolResponse ? JSON.stringify(toolResponse) : \"\",\n          });\n        }\n        request.messages.push(toolUseMessage);\n      }\n\n      requestCount++;\n      logging.log(`Claude request(${requestCount}):`, request);\n      response = await client.post(\"/messages\", request);\n      logging.log(`Claude response(${requestCount}): `, response.data);\n    } while (response && response.data && response.data.stop_reason !== \"end_turn\");\n\n    return {\n      response: response.data.content[0].text,\n      chatHistory: [...request.messages, { role: \"assistant\", content: response.data.content }],\n      data: response.data,\n      error: null,\n    }\n  } catch (error) {\n    logging.log(\"Error\");\n    logging.log(error.config);\n    logging.log(error.message);\n    return { error: error.message }\n  }\n}",
      "subType": "assistant",
      "inputs": {
        "properties": {
          "userPrompt": {
            "type": "string",
            "default": "",
            "buildship": { "sensitive": false, "index": 2 },
            "description": "",
            "title": "User Prompt",
            "pattern": ""
          },
          "instructions": {
            "title": "Instructions",
            "type": "string",
            "default": "",
            "buildship": { "sensitive": false, "index": 1 },
            "pattern": "",
            "description": ""
          },
          "model": {
            "buildship": {
              "index": 4,
              "sensitive": false,
              "options": [
                { "label": "Claude 3 Opus", "value": "claude-3-opus-20240229" },
                { "label": "Claude 3 Sonnet", "value": "claude-3-sonnet-20240229" },
                { "value": "claude-3-haiku-20240307", "label": "Claude 3 Haiku" }
              ]
            },
            "title": "Model",
            "description": "",
            "enum": ["claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307"],
            "pattern": "",
            "default": "claude-3-opus-20240229",
            "type": "string"
          },
          "chatHistory": {
            "buildship": { "sensitive": false, "index": 5 },
            "pattern": "",
            "description": "",
            "type": "array",
            "title": "Chat History",
            "default": []
          },
          "claudeApiKey": {
            "buildship": { "index": 0, "sensitive": true },
            "title": "API Key",
            "type": "string",
            "pattern": "",
            "description": "The OpenAI API key to use for authentication."
          },
          "maxTokens": {
            "buildship": { "sensitive": false, "index": 4 },
            "description": "",
            "title": "Max Tokens",
            "pattern": "",
            "default": "",
            "type": "number"
          }
        },
        "required": ["maxTokens", "userPrompt", "claudeApiKey", "instructions", "model"],
        "type": "object"
      },
      "output": {
        "buildship": { "index": 0 },
        "title": "",
        "description": "",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "object",
            "buildship": { "index": 3 },
            "description": "",
            "properties": {}
          },
          "chatHistory": { "buildship": { "index": 1 }, "title": "Chat History", "type": "array", "description": "" },
          "error": { "title": "Error", "description": "", "buildship": { "index": 2 } },
          "response": { "type": "string", "description": "", "buildship": { "index": 0 }, "title": "Response" }
        }
      },
      "meta": {
        "icon": {
          "type": "URL",
          "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fanthropic.png?alt=media&token=ec0eb8dc-f0d4-4f97-a144-023f1aa8118e"
        },
        "description": "",
        "id": "claude-assistant-node",
        "name": "Claude Assistant"
      },
      "dependencies": { "axios": "0.28.1" }
    },
    {
      "label": "Return",
      "response": {
        "200": {
          "description": "",
          "title": "",
          "properties": {
            "chatHistory": { "buildship": { "index": 1 }, "title": "Chat History", "description": "", "type": "array" },
            "error": { "title": "Error", "description": "", "buildship": { "index": 2 } },
            "data": {
              "description": "",
              "buildship": { "index": 3 },
              "title": "Data",
              "type": "object",
              "properties": {}
            },
            "response": { "title": "Response", "description": "", "buildship": { "index": 0 }, "type": "string" }
          },
          "type": "object",
          "buildship": { "index": 0 }
        }
      },
      "id": "6e24b506-3c25-45d5-8fae-07ed626a8d0f",
      "description": "The Return Node is used to return values from the workflow. It is generally the last node in the workflow. The return node is optional as the API can inherently return a 200 OK response by default. [Full Documentation](https://docs.buildship.com/core-nodes/return).",
      "type": "return",
      "inputs": {
        "required": [],
        "properties": {
          "cacheMaxAge": {
            "title": "Cache Time",
            "buildship": { "index": 2 },
            "description": "Set cache duration in seconds",
            "default": 0,
            "type": "number"
          },
          "status": {
            "title": "Status code",
            "description": "The HTTP status code to return",
            "buildship": {
              "index": 0,
              "options": [
                { "value": "200", "label": "OK (200)" },
                { "label": "Created (201)", "value": "201" },
                { "value": "202", "label": "Accepted (202)" },
                { "value": "301", "label": "Redirect (301)" },
                { "value": "204", "label": "No Content (204)" },
                { "value": "400", "label": "Bad Request (400)" },
                { "label": "Unauthorized (401)", "value": "401" },
                { "value": "403", "label": "Forbidden (403)" },
                { "label": "Not Found (404)", "value": "404" },
                { "value": "500", "label": "Internal Server Error (500)" }
              ]
            },
            "default": "200",
            "type": "string",
            "enum": ["200", "201", "202", "204", "400", "401", "403", "404", "500"]
          },
          "value": {
            "type": "string",
            "description": "The value to return",
            "buildship": { "index": 1 },
            "default": "",
            "title": "Value"
          }
        },
        "type": "object"
      }
    }
  ],
  "trigger": {
    "request": {
      "title": "Request",
      "buildship": {},
      "properties": {
        "body": {
          "title": "Body",
          "description": "Body of the request",
          "buildship": {},
          "properties": {},
          "type": "object"
        },
        "headers": {
          "title": "Request Headers",
          "type": "object",
          "description": "Headers of the request",
          "buildship": {},
          "properties": {}
        },
        "query": {
          "buildship": {},
          "description": "Query parameters",
          "properties": {},
          "title": "Query",
          "type": "object"
        }
      },
      "type": "object",
      "required": []
    },
    "instruction": { "bodyTemplate": "https://{{runtimeUrl}}/{{httpPath}}", "title": "Endpoint URL" },
    "dependencies": {},
    "inputs": {
      "type": "object",
      "required": ["method", "path"],
      "properties": {
        "path": {
          "default": "/",
          "type": "string",
          "description": "The path of the API Endpoint. Additionally, define the structure for the incoming API requests. [Learn more about API Specification here](https://docs.buildship.com/basics/api-spec#request-specification).",
          "title": "Path",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": ""
        },
        "method": {
          "type": "string",
          "description": "The HTTP method for the incoming request.",
          "pattern": "",
          "default": "GET",
          "buildship": {
            "options": [
              { "label": "GET", "value": "GET" },
              { "label": "POST", "value": "POST" },
              { "label": "PUT", "value": "PUT" },
              { "label": "DELETE", "value": "DELETE" }
            ],
            "sensitive": false,
            "index": 1
          },
          "enum": ["GET", "POST", "PUT", "DELETE"],
          "title": "Method"
        }
      }
    },
    "live": true,
    "script": "",
    "id": "http",
    "type": "http",
    "testingSchema": [
      {
        "disabled": true,
        "name": "endpointURL",
        "label": "Endpoint URL",
        "type": "shortText",
        "prefill": "endpointURL"
      },
      { "type": "apiRequestData", "name": "apiRequestData", "prefill": "apiRequestData" }
    ],
    "label": "Rest API Call",
    "order": 1,
    "output": {
      "properties": {
        "query": {
          "description": "Query parameters",
          "title": "Query parameters",
          "buildship": { "index": 0 },
          "type": "object"
        },
        "headers": {
          "description": "Headers of the request",
          "type": "object",
          "properties": {
            "authorization": {
              "description": "Authorization header",
              "buildship": { "index": 1 },
              "type": "string",
              "title": "Authorization"
            },
            "content-type": {
              "buildship": { "index": 0 },
              "type": "string",
              "description": "Content-Type of the request",
              "title": "Content-Type"
            }
          },
          "buildship": {},
          "title": "Headers"
        },
        "body": { "description": "Body of the request", "title": "Body", "type": "object", "buildship": { "index": 1 } }
      },
      "buildship": {},
      "type": "object",
      "title": "Request"
    },
    "meta": {
      "description": "Create an API / HTTP endpoint as the trigger or starting point for your workflow. This endpoint can be used in other apps to run the workflow. [Full documentation](https://docs.buildship.com/trigger-nodes/rest-api)",
      "name": "Rest API Call",
      "id": "http",
      "icon": {}
    }
  },
  "nodeValues": {
    "74421e30-d2dc-41fb-90d0-b146ab145593": {
      "userPrompt": "",
      "resource": "",
      "assistantId": "",
      "azureApiKey": "",
      "instructions": ""
    },
    "4443084d-8a25-4e94-9b5c-1442101894f3": {
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/18wTeHA4vpLaCCe4Ui_kGPpj-rWemzTwQ9kRe1X925rg/edit#gid=0",
      "ranges": "Sheet1",
      "integrations": { "gsheets": "gsheets;;han.tuerker@gmail.com" }
    },
    "42047476-c3da-42f7-9381-ebcfbff53c97": {
      "ranges": { "sheets": ["Sheet 1"] },
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit?usp=sharing",
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" }
    },
    "e39a1ef5-bb17-4fbd-8d15-e7d1c2317470": {
      "chatHistory": "",
      "messageHistory": { "expression": "[]", "type": "javascript" },
      "userPrompt": { "expression": "ctx[\"root\"][\"request\"][\"body\"].message", "type": "javascript" },
      "maxTokens": 1024,
      "claudeApiKey": { "secretName": "claude-harini" },
      "model": "claude-3-opus-20240229",
      "systemPrompt": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products"
    },
    "http": { "path": "/claude-talk-to-sheets", "method": "POST" },
    "fb36467d-adbf-48e6-895b-5b376fffddbb": {
      "claudeApiKey": { "secretName": "claude-harini" },
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' tool to access Azure Home collection of products which read it from the defined spreadheet",
      "maxTokens": 1024,
      "userPrompt": {
        "expression": "ctx[\"root\"][\"request\"][\"body\"].message",
        "hasErrors": false,
        "type": "javascript"
      },
      "model": "claude-3-sonnet-20240229",
      "chatHistory": {
        "hasErrors": true,
        "expression": "ctx[\"root\"][\"request\"][\"body\"].chatHistory",
        "type": "javascript"
      }
    },
    "test-node-3d835286-91ab-45e4-bdc2-6c45ec0b13cf": {
      "assistantId": "asst_OadB242bbzmqSmFFmfGH0Fbd",
      "apiKey": { "secretName": "openai" },
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products"
    },
    "test-node-e39a1ef5-bb17-4fbd-8d15-e7d1c2317470": {
      "model": "claude-3-opus-20240229",
      "maxTokens": 512,
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "claudeApiKey": { "secretName": "claude-harini" },
      "messageHistory": [],
      "systemPrompt": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "chatHistory": [],
      "userPrompt": "Give me 3 sofa recommendation for less than 1k"
    },
    "99952aca-cad3-4172-a563-5c9f849e711b": {
      "ranges": { "errors": [], "expression": "[\"Sheet 1\"]", "type": "javascript" },
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" },
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit#gid=1340319221"
    },
    "test-node-ac4927a0-36c1-4ddf-9831-c9c17155c38c": {
      "integrations": { "gsheets": "gsheets;;han.tuerker@gmail.com" },
      "ranges": "Sheet1",
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/18wTeHA4vpLaCCe4Ui_kGPpj-rWemzTwQ9kRe1X925rg/edit#gid=0"
    },
    "test-node-99952aca-cad3-4172-a563-5c9f849e711b": {
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit#gid=1340319221",
      "ranges": { "errors": [], "type": "javascript", "expression": "[\"Sheet 1\"]" },
      "integrations": { "gsheets": "gsheets;;bhavya@rowy.io" }
    },
    "6fd77243-6df7-4ee5-8a10-8a33ce6d9939": {
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" },
      "ranges": "Sheet 1",
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit?usp=sharing"
    },
    "test-node-b3382952-b71f-4fb8-9da7-3d076879be22": { "modelId": "", "maxTokens": "1024", "temperature": "0.5" },
    "test-node-fb36467d-adbf-48e6-895b-5b376fffddbb": {
      "instructions": "",
      "model": "claude-3-opus-20240229",
      "chatHistory": [],
      "maxTokens": "",
      "userPrompt": "",
      "claudeApiKey": { "secretName": "claude-harini" }
    },
    "test-node-6fd77243-6df7-4ee5-8a10-8a33ce6d9939": {
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit?usp=sharing",
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" },
      "ranges": { "type": "javascript", "expression": "[]" }
    },
    "b3382952-b71f-4fb8-9da7-3d076879be22": {
      "apiKey": { "secretName": "claude-harini" },
      "temperature": "0.5",
      "maxTokens": "1024",
      "modelId": ""
    },
    "4fcab4fd-3d80-4c01-bb28-36144923588e": {
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "prompt": { "type": "javascript", "expression": "ctx[\"root\"][\"request\"][\"body\"].message" },
      "apiKey": { "secretName": "openai" },
      "threadId": { "type": "javascript", "expression": "ctx[\"root\"][\"request\"][\"body\"].threadId" },
      "assistantId": "asst_OadB242bbzmqSmFFmfGH0Fbd"
    },
    "f5e4f6d1-de5f-4603-a8b2-c3b571bbf4f5": {
      "model": "claude-3-opus-20240229",
      "userPrompt": "",
      "systemPrompt": "",
      "messageHistory": { "type": "javascript", "expression": "[]" },
      "maxTokens": 1024,
      "claudeApiKey": ""
    },
    "6e24b506-3c25-45d5-8fae-07ed626a8d0f": {
      "value": { "keys": ["fb36467d-adbf-48e6-895b-5b376fffddbb"] },
      "status": "200",
      "cacheMaxAge": 0
    },
    "test-node-8fdfa8c3-8ec4-409a-bf33-d968bd219ab4": {
      "ranges": [],
      "spreadsheetUrl": "",
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" }
    },
    "ac4927a0-36c1-4ddf-9831-c9c17155c38c": {
      "integrations": { "gsheets": "gsheets;;han.tuerker@gmail.com" },
      "ranges": "Sheet1",
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/18wTeHA4vpLaCCe4Ui_kGPpj-rWemzTwQ9kRe1X925rg/edit#gid=0"
    },
    "f1feb4fa-b96e-4401-a220-9192b42c3173": {
      "userPrompt": {
        "type": "javascript",
        "hasErrors": false,
        "expression": "ctx[\"root\"][\"request\"][\"body\"].message"
      },
      "chatHistory": { "type": "javascript", "expression": "[]" },
      "claudeApiKey": { "secretName": "claude-harini" },
      "maxTokens": 1024,
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "model": "claude-3-opus-20240229"
    },
    "aa5d0298-57c2-4fb5-ad5b-caa2071f8d31": {
      "integrations": { "gsheets": "gsheets;;han.tuerker@gmail.com" },
      "ranges": "Sheet1",
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/18wTeHA4vpLaCCe4Ui_kGPpj-rWemzTwQ9kRe1X925rg/edit#gid=0"
    },
    "test-node-aa5d0298-57c2-4fb5-ad5b-caa2071f8d31": {
      "ranges": [],
      "integrations": { "gsheets": "gsheets;;han.tuerker@gmail.com" },
      "spreadsheetUrl": ""
    },
    "8fdfa8c3-8ec4-409a-bf33-d968bd219ab4": {
      "ranges": { "expression": "[\"Sheet 1\"]", "type": "javascript" },
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" },
      "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1ZUmpMKUZzbgTNbWzjtsTURlDlmp7EjOUASWaBG_XLd8/edit#gid=1340319221"
    },
    "3d835286-91ab-45e4-bdc2-6c45ec0b13cf": {
      "apiKey": { "secretName": "openai" },
      "assistantId": "asst_OadB242bbzmqSmFFmfGH0Fbd",
      "instructions": "You are a Azura Home specialist. You have a detailed knowledge of Azura Home's eco-friendly Mediterranean furniture and decor products. Your task is to provide informative and helpful responses to user inquiries about product materials, design inspirations, styles or pricing and any other specifics they might be interested in. Your answers should reflect the brand's commitment to sustainability, craftsmanship, and the Mediterranean aesthetic, helping users make informed decisions while fostering an appreciation for the unique qualities of each piece in the Azura Home collection. When you are given tools to use, you must use them following the guidelines for each tool.Guidelines:- when you start the conversation, you must use 'get sheets' to access Azure Home collection of products",
      "prompt": { "expression": "ctx[\"root\"][\"request\"][\"body\"].message", "type": "javascript" },
      "threadId": { "expression": "ctx[\"root\"][\"request\"][\"body\"].threadId", "type": "javascript" }
    },
    "test-node-42047476-c3da-42f7-9381-ebcfbff53c97": {
      "spreadsheetUrl": "",
      "integrations": { "gsheets": "gsheets;;gerard@rowy.io" }
    }
  },
  "notes": "<p>An assistant that allows you to chat with a google sheets. Here the sheets had data about furnitures. Try it using this test request body:</p><p><br></p><p>{</p><p>&nbsp;\"message\":\"what price range are your Mediterranean sofas?\"</p><p>}</p><p><br></p><p>Short Video: <a href=\"https://www.youtube.com/watch?v=OiQJQMk_2mo\" rel=\"noopener noreferrer\" target=\"_blank\">youtube.com/watch?v=OiQJQMk_2mo</a></p><p>Documentation: <a href=\"https://docs.buildship.com/ai-models/assistant#use-case-i-chat-with-assistant\" rel=\"noopener noreferrer\" target=\"_blank\">docs.buildship.com/ai-models/assistant</a></p>"
}
